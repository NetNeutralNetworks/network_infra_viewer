<doc>
##################################################################################################
TTP Template to parse Cisco IOS "show running config" and extract all basic system information.
##################################################################################################

```
snmp-server community public RO 8
!
snmp-server community «snmp_ro_community» RO 10
snmp-server community «snmp_rw_community» RW 11
!
snmp-server trap-source loopback0
!
!
snmp-server location «snmp_locatie_adres_ruimte»
snmp-server contact «snmp_locatie_contact_persoon»
snmp-server queue-length 200
snmp-server system-shutdown
snmp-server enable traps snmp authentication linkdown linkup coldstart warmstart
snmp-server enable traps transceiver all
snmp-server enable traps tty
snmp-server enable traps config-copy
snmp-server enable traps config
snmp-server enable traps config-ctid
snmp-server enable traps bridge newroot topologychange
snmp-server enable traps stpx inconsistency root-inconsistency loop-inconsistency
snmp-server enable traps syslog
snmp-server enable traps license
snmp-server enable traps entity
snmp-server enable traps cpu threshold
snmp-server enable traps vlancreate
snmp-server enable traps vlandelete
snmp-server enable traps flash insertion removal
snmp-server enable traps envmon fan shutdown supply temperature status
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!! Two snmp servers - same 2 IP's on every device !!!!
snmp-server host 145.50.42.159 public
snmp-server host 145.50.42.31 public
!
snmp ifmib ifindex persist
```
</doc>

<macro>
def snmp_fix_traps_items(data):
    traps = data[0].get('root',{}).get('_snmp',{}).get('traps', {})
    # print(traps)
    for trap, events in traps.items():
        if events == []:
            continue
        output = []
        for event in events:
            output.extend(event.split(' '))
        traps[trap] = output
</macro>

<group name='root._snmp**'>
snmp-server trap-source {{source_interface}}
snmp-server location {{location | ORPHRASE}}
snmp-server contact {{contact | ORPHRASE}}
snmp-server queue-length {{queue_length | to_int}}
snmp-server system-shutdown {{system_shutdown| set(True) | default(False)}}
snmp ifmib ifindex persist {{ifindex_persist| set(True) | default(False)}}
    <group name='hosts.{{host}}'>
snmp-server host {{host}} {{community}}
snmp-server host {{host}} traps {{community}}
    </group>
</group>

<group name='root._snmp.communities*' method="table">
snmp-server community {{name}} {{access_type}} {{acl}}
</group>

<group name='root._snmp.traps**.{{service}}*' method="table" itemize="items">
snmp-server enable traps {{service | let('items', '')}}
snmp-server enable traps {{service}} {{items | ORPHRASE}}
</group>

<output macro="snmp_fix_traps_items"/>
