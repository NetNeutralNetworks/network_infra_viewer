<doc>
##################################################################################################
This part should capture all radius servers conforming to the example below
##################################################################################################

```
ip radius source-interface Loopback0
!
radius server GV-ACBHN-001
 address ipv4 0.0.5.222 auth-port 1645 acct-port 1646
 key 7 xxxxxxxx
!
radius server UT-ACBHN-001
 address ipv4 0.0.5.226 auth-port 1645 acct-port 1646
 key 7 xxxxxxxx
```
</doc>

<macro>
def add_aaa_default_server_group(data):
    server_groups = data[0].get('root', {}).get('system', {}).get('aaa', {}).get('server-groups', {}).get('server-group', {})
    for group in server_groups:
        if group.get('config'):
            continue
        group['config'] = {
          "type": "RADIUS",
          "name": "default"
        }
</macro>

<group name='root.system.aaa**.server-groups.server-group*' expand=''>
  <group name='servers.server*' expand=''>
radius server {{config.name}}
 address {{ignore}} {{config.address}} auth-port {{radius.config.auth-port|to_int}} acct-port {{radius.config.acct-port|to_int}}
 key {{radius.config._encryption_level|to_int}} {{ radius.config.secret-key-hashed }}
  </group>
</group>

<output macro='add_aaa_default_server_group' />
